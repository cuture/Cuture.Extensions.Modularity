// <Auto-Generated></Auto-Generated>

using System.Threading;
using System.Threading.Tasks;

namespace Cuture.Extensions.Modularity
{
    /// <inheritdoc cref="IAsyncAppModule"/>
    public abstract class AsyncAppModule : IAsyncAppModule
    {
        /// <inheritdoc/>
        public virtual Task PreConfigureServicesAsync(ServiceConfigurationContext context) => Task.CompletedTask;

        /// <inheritdoc/>
        public virtual Task ConfigureServicesAsync(ServiceConfigurationContext context) => Task.CompletedTask;

        /// <inheritdoc/>
        public virtual Task PostConfigureServicesAsync(ServiceConfigurationContext context) => Task.CompletedTask;

        /// <inheritdoc/>
        public virtual Task OnPreApplicationInitializationAsync(ApplicationInitializationContext context) => Task.CompletedTask;

        /// <inheritdoc/>
        public virtual Task OnApplicationInitializationAsync(ApplicationInitializationContext context) => Task.CompletedTask;

        /// <inheritdoc/>
        public virtual Task OnPostApplicationInitializationAsync(ApplicationInitializationContext context) => Task.CompletedTask;

        /// <inheritdoc/>
        public virtual Task OnApplicationShutdownAsync(ApplicationShutdownContext context, CancellationToken token) => Task.CompletedTask;
    }
}