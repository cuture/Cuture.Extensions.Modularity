// <Auto-Generated></Auto-Generated>

using System;
using System.IO;
using System.Threading;

using Microsoft.Extensions.DependencyInjection;

namespace DirectUseDIContainerSample
{
    class Program
    {
        static void Main(string[] args)
        {
            var module3Path = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "SampleModule3.dll");
            var module5Directory = Path.Combine(AppDomain.CurrentDomain.BaseDirectory, "plugins");

            var services = new ServiceCollection();

            //加载模块
            services.LoadModule<DIContainerSampleModule>()
                    .AddModuleFile(module3Path) //从文件加载
                    .AddModuleDirectory(source =>
                    {
                        source.SearchDepth = 5;    //设置文件夹搜索深度
                    }, module5Directory)  //从文件夹加载
                    .ModuleLoadComplete();

            using (var serviceProvider = services.BuildServiceProvider())
            {
                //初始化模块
                serviceProvider.InitializationModulesWithOutHostLifetime();

                //这里使用初始化了模块的serviceProvider
                Console.WriteLine("使用初始化了模块的serviceProvider");
                Thread.Sleep(2000);

                Console.WriteLine("\r\n使用结束，关闭模块");
                //关闭模块
                serviceProvider.ShutdownModules();
            }
        }
    }
}
